{"name":"cspec","tagline":"C/C++ specs for humans","body":"cspec - C/C++ specs for humans\r\n==============================\r\n\r\n### In a nutshell\r\n\r\n```c\r\n#include <cspec/cspec.h>\r\n\r\nint main(int argc, char **argv) {\r\n\r\n    describe(\"Numbers\", function () {\r\n\r\n        it(\"1 should be equals 1\", function () {\r\n           should_be_equals(1,1);\r\n        });\r\n\r\n    });\r\n\r\n    return CSPEC_RESULT;\r\n\r\n}\r\n```\r\n* `gcc numbers.c -o numbers -lcspec`\r\n* Run the example `./numbers`\r\n\r\n```bash\r\n  Numbers\r\n    ✔ 1 should be equals 1\r\n\r\n  1 Success\r\n```\r\n\r\n### Getting started\r\n\r\n#### How to install it?\r\n* Checkout this repo: `git checkout https://github.com/fedescarpa/cspec.git`\r\n* Enter into cspec folder: `cd cspec`\r\n* Build the project:`sudo make`\r\n* Install: `sudo make install`\r\n\r\n#### How to uninstall it?\r\n* Run: `sudo make clean uninstall`\r\n\r\n#### What's next?\r\n* Write some code and some tests\r\n* Compile your files using `-lcspec` to link the library, e.g. `gcc helloWorld.cpp -o helloWorld -lcspec`\r\n* Run it, e.g. `./helloWorld`\r\n* Add more features!\r\n\r\n#### Help me, Eclipse shows error everywhere!\r\nHave you added cspec as a library? Probably not, so let me help you with that:\r\n\r\n* Right click on your project and choose `Properties`\r\n* Go to `C/C++ Build -> Settings -> Tool Settings -> GCC C++ Linker -> Libraries`\r\n* On the upper panel, `Libraries (-l)` press the add button and add `cspec`\r\n\r\n### Usage\r\n\r\n#### Expectations functions\r\n* `should_be_true(boolean)`\r\n* `should_be_false(boolean)`\r\n* `should_be_null(pointer)`\r\n* `should_not_be_null(pointer)`\r\n* `should_be_equals(expected, actual)`\r\n* `should_not_be_equals(expected, actual)`\r\n* `should_be_equals_strings(expected, actual)`\r\n* `should_not_be_equals_strings(expected, actual)`\r\n\r\n#### Fluent DSLish expectations\r\n* In order\r\n 1. `should(value)`\r\n 2. `be | not_be | be_string`\r\n 3. `truthy | falsey | equal(expected) | null`\r\n\r\n```c\r\n#include <cspec/cspec.h>\r\n#include <stdio.h>\r\n\r\nint main(int argc, char **argv) {\r\n\r\n    describe(\"describe 1\", function () {\r\n\r\n        char* world = \"World\";\r\n\r\n        it(\"it 1\", function () {\r\n            should(0) be falsey;\r\n        });\r\n\r\n        it(\"it 2\", function () {\r\n            should(1) be truthy;\r\n        });\r\n\r\n        describe(\"describe 2\", function () {\r\n\r\n            it(\"it 3\", function () {\r\n                should(1) be equal(2);\r\n            });\r\n\r\n            it(\"it 4\", function () {\r\n                should(world) be_string equal(\"World\");\r\n            });\r\n\r\n        });\r\n\r\n    });\r\n\r\n    return CSPEC_RESULT;\r\n\r\n}\r\n```\r\n\r\n**WARNING!** The last line in the example (`return CSPEC_RESULT;`) prints the report and returns the exit code. If you forget to add it, you won't see anything\r\n\r\n#### Hook methods (aka Setup / TearDown)\r\nEach \"describe\" have its own hooks.\r\n\r\n```c\r\n#include <cspec/cspec.h>\r\n#include <stdio.h>\r\n\r\nint main(int argc, char **argv) {\r\n\r\n    describe(\"describe 1\", function () {\r\n\r\n        static int mundo;\r\n\r\n        before(function () {\r\n            puts(\"BEFORE\");\r\n            mundo = 1;\r\n        });\r\n\r\n        after(function () {\r\n            puts(\"AFTER\");\r\n        });\r\n\r\n        it(\"it 1\", function () {\r\n            should_be_false(1);\r\n        });\r\n\r\n        it(\"it 2\", function () {\r\n            should_be_true(1);\r\n        });\r\n\r\n        describe(\"describe 2\", function () {\r\n\r\n            it(\"it 3\", function () {\r\n                should_be_equals(1, mundo);\r\n            });\r\n\r\n            skip(\"it 4\", function () {\r\n                should_be_equals_strings(\"MUNDO\", mundo);\r\n            });\r\n\r\n        });\r\n\r\n    });\r\n\r\n    return CSPEC_RESULT;\r\n\r\n}\r\n```\r\n\r\nIt prints the following report:\r\n\r\n\r\n```\r\n  describe 1\r\nBEFORE\r\n    ✖ it 1\r\nAFTER\r\nBEFORE\r\n    ✔ it 2\r\nAFTER\r\n    describe 2\r\n      ✔ it 3\r\n      • it 4 (WTF - SKIPPED)\r\n\r\n  2 Success\r\n  1 Pending\r\n  1 Failure\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}